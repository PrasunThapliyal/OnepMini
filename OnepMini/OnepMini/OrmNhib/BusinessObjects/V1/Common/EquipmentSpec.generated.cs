//-----------------------------------------------------------------------------
// <copyright file="EquipmentSpec.generated.cs" company="Ciena Corporation"\>
//     Copyright (c) Ciena Corporation. All rights reserved.
// </copyright\>
//
// This file was generated by a tool. Do not make modifications to this file.
//
//-----------------------------------------------------------------------------

namespace OnepMini.V1.Common
{
    using System;
    using System.Collections.ObjectModel;
    using System.Collections.Generic;
    using System.ComponentModel;
    using System.ComponentModel.DataAnnotations;
    using System.Runtime.CompilerServices;
    using System.Runtime.Serialization;
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;

    /// <summary>EquipmentSpec</summary>
    public partial class EquipmentSpec
    {
        private string _partNumber;
        private string _description;
        private string _shortDescription;
        private string _releaseMin;
        private string _aidType;
        private string _groupId;
        private OnepMini.V1.Common.ModellingStatus _modellingStatus;
        private string _serialNumber;
        private string _manufacturingDate;
        private string _age;
        private bool? _isExcludedFromDefaultProfile;

    	/// <summary>
        /// Initializes a new instance of the <see cref="EquipmentSpec"/> class.
        /// </summary>
        public EquipmentSpec()
    	{
        }

        [System.Runtime.Serialization.IgnoreDataMember]
        [JsonIgnore]
        public virtual long OId { get; set; }


        /// <summary>Equipment PEC code.</summary>
        [JsonProperty("partNumber", Required = Required.Always)]
        public virtual string PartNumber
        {
            get { return _partNumber; }
            set 
            {
                if (_partNumber != value)
                {
                    _partNumber = value; 
                }
            }
        }

        /// <summary>Equipment description.</summary>
        [JsonProperty("description", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public virtual string Description
        {
            get { return _description; }
            set 
            {
                if (_description != value)
                {
                    _description = value; 
                }
            }
        }

        /// <summary>Equipment short description.</summary>
        [JsonProperty("shortDescription", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public virtual string ShortDescription
        {
            get { return _shortDescription; }
            set 
            {
                if (_shortDescription != value)
                {
                    _shortDescription = value; 
                }
            }
        }

        /// <summary>Release Min.</summary>
        [JsonProperty("releaseMin", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public virtual string ReleaseMin
        {
            get { return _releaseMin; }
            set 
            {
                if (_releaseMin != value)
                {
                    _releaseMin = value; 
                }
            }
        }

        /// <summary>Equipment AID type.</summary>
        [JsonProperty("aidType", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public virtual string AidType
        {
            get { return _aidType; }
            set 
            {
                if (_aidType != value)
                {
                    _aidType = value; 
                }
            }
        }

        /// <summary>Equipments grouped based on this Id</summary>
        [JsonProperty("groupId", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public virtual string GroupId
        {
            get { return _groupId; }
            set 
            {
                if (_groupId != value)
                {
                    _groupId = value; 
                }
            }
        }

        /// <summary>Modelling status of equipment</summary>
        [JsonProperty("modellingStatus", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public virtual OnepMini.V1.Common.ModellingStatus ModellingStatus
        {
            get { return _modellingStatus; }
            set 
            {
                if (_modellingStatus != value)
                {
                    _modellingStatus = value; 
                }
            }
        }

        /// <summary>Serial Number</summary>
        [JsonProperty("serialNumber", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public virtual string SerialNumber
        {
            get { return _serialNumber; }
            set 
            {
                if (_serialNumber != value)
                {
                    _serialNumber = value; 
                }
            }
        }

        /// <summary>Manufacturing Date</summary>
        [JsonProperty("manufacturingDate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public virtual string ManufacturingDate
        {
            get { return _manufacturingDate; }
            set 
            {
                if (_manufacturingDate != value)
                {
                    _manufacturingDate = value; 
                }
            }
        }

        /// <summary>Age</summary>
        [JsonProperty("age", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public virtual string Age
        {
            get { return _age; }
            set 
            {
                if (_age != value)
                {
                    _age = value; 
                }
            }
        }

        /// <summary>IsExcludedFromDefaultProfile</summary>
        [JsonProperty("isExcludedFromDefaultProfile", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public virtual bool? IsExcludedFromDefaultProfile
        {
            get { return _isExcludedFromDefaultProfile; }
            set 
            {
                if (_isExcludedFromDefaultProfile != value)
                {
                    _isExcludedFromDefaultProfile = value; 
                }
            }
        }


    }
}