//-----------------------------------------------------------------------------
// <copyright file="Location.generated.cs" company="Ciena Corporation"\>
//     Copyright (c) Ciena Corporation. All rights reserved.
// </copyright\>
//
// This file was generated by a tool. Do not make modifications to this file.
//
//-----------------------------------------------------------------------------

namespace OnepMini.V1.Common
{
    using System;
    using System.Collections.ObjectModel;
    using System.Collections.Generic;
    using System.ComponentModel;
    using System.ComponentModel.DataAnnotations;
    using System.Runtime.CompilerServices;
    using System.Runtime.Serialization;
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;

    /// <summary>Location</summary>
    public partial class Location
    {
        private MgmtAccessTypes _mgmtAccess;
        private ICollection<OnepMini.V1.Common.LocationAddress> _address;

    	/// <summary>
        /// Initializes a new instance of the <see cref="Location"/> class.
        /// </summary>
        public Location()
    	{
            _address = new List<OnepMini.V1.Common.LocationAddress>();
        }

        [System.Runtime.Serialization.IgnoreDataMember]
        [JsonIgnore]
        public virtual long OId { get; set; }

        /// <summary>MgmtAccessTypes</summary>
        public enum MgmtAccessTypes
        {
        #pragma warning disable 1591
             [EnumMember(Value = "TL1_ACCESS")]
        	 TL1_ACCESS, 
             [EnumMember(Value = "SAOS_ACCESS")]
        	 SAOS_ACCESS, 
        #pragma warning restore 1591
        }



        /// <summary>Different type presentation of a Location</summary>
        [JsonConverter(typeof(StringEnumConverter))]
        [JsonProperty("mgmtAccess", Required = Required.Always)]
        public virtual MgmtAccessTypes MgmtAccess
        {
            get { return _mgmtAccess; }
            set 
            {
                if (_mgmtAccess != value)
                {
                    _mgmtAccess = value; 
                }
            }
        }

        /// <summary>List of attributes to describe a Location</summary>
        [JsonProperty("address", Required = Required.Always)]
        public virtual ICollection<OnepMini.V1.Common.LocationAddress> Address
        {
            get { return _address; }
            set 
            {
                if (_address != value)
                {
                    _address = value; 
                }
            }
        }


    }
}