//-----------------------------------------------------------------------------
// <copyright file="OchReportData.generated.cs" company="Ciena Corporation"\>
//     Copyright (c) Ciena Corporation. All rights reserved.
// </copyright\>
//
// This file was generated by a tool. Do not make modifications to this file.
//
//-----------------------------------------------------------------------------

namespace TopologyRestLibrary.V1.Etp.Reports
{
    using System;
    using System.Collections.ObjectModel;
    using System.Collections.Generic;
    using System.ComponentModel;
    using System.ComponentModel.DataAnnotations;
    using System.Runtime.CompilerServices;
    using System.Runtime.Serialization;
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;

    /// <summary>OchReportData</summary>
    public partial class OchReportData
    {
        private string _id;
        private TopologyRestLibrary.V1.Etp.Reports.OpticalChannelsReportItem _attributes;
        private TypeTypes _type;

        /// <summary>
        /// Initializes a new instance of the <see cref="OchReportData"/> class.
        /// </summary>
        public OchReportData()
        {
            _type = TypeTypes.och;

        }

        [System.Runtime.Serialization.IgnoreDataMember]
        [JsonIgnore]
        public virtual long OId { get; set; }

        /// <summary>TypeTypes</summary>
        public enum TypeTypes
        {
        #pragma warning disable 1591
             [EnumMember(Value = "och")]
        	 och, 
        #pragma warning restore 1591
        }



        /// <summary>ID</summary>
        [JsonProperty("id", Required = Required.Always)]
        public virtual string Id
        {
            get { return _id; }
            set 
            {
                if (_id != value)
                {
                    _id = value; 
                }
            }
        }

        /// <summary>Attributes of OCH</summary>
        [JsonProperty("attributes", Required = Required.Always)]
        public virtual TopologyRestLibrary.V1.Etp.Reports.OpticalChannelsReportItem Attributes
        {
            get { return _attributes; }
            set 
            {
                if (_attributes != value)
                {
                    _attributes = value; 
                }
            }
        }

        /// <summary>Report type</summary>
        [JsonConverter(typeof(StringEnumConverter))]
        [JsonProperty("type", Required = Required.Always)]
        public virtual TypeTypes Type
        {
            get { return _type; }
            set 
            {
                if (_type != value)
                {
                    _type = value; 
                }
            }
        }


    }
}